/*
 * Copyright Â© 2020 By Geeks Empire.
 *
 * Created by Elias Fazel on 3/8/20 7:23 AM
 * Last modified 3/8/20 7:22 AM
 *
 * Licensed Under MIT License.
 * https://opensource.org/licenses/MIT
 */

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.3'

    defaultConfig {
        applicationId "net.geekstools.floatshort.PRO"

        minSdkVersion 25
        targetSdkVersion 29

        versionCode 711
        versionName "${majorVersion}." + getDateMonth() + "." + getDateDay() + "." + getDateYear() + ".${versionCode}"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    flavorDimensions "FloatingShortcutsPro"
    productFlavors {
        releaseConfig {
            dimension "FloatingShortcutsPro"

            versionNameSuffix '[PRO][WearOS][Watch]'
        }
        betaConfig {
            dimension "FloatingShortcutsPro"

            versionNameSuffix '[PRO][WearOS][Watch][BETA]'
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE-FIREBASE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/DEPENDENCIES'
    }
}

static def getDateYear() {
    def date = new Date()
    def formattedDate = date.format('yyyy')//yyyyMMdd
    return formattedDate
}

static def getDateMonth() {
    def date = new Date()
    def formattedDate = date.format('MM')//yyyyMMdd
    return formattedDate
}

static def getDateDay() {
    def date = new Date()
    def formattedDate = date.format('dd')//yyyyMMdd
    return formattedDate
}

dependencies {
    implementation project(':LicenseLibrary')
    implementation project(':ShapesCustomImageViewLibrary')


    compileOnly 'com.google.android.wearable:wearable:2.5.0'
    implementation 'com.google.android.support:wearable:2.5.0'


    implementation 'com.google.android.gms:play-services-wearable:17.0.0'


    implementation 'androidx.palette:palette:1.0.0'


    implementation 'com.google.firebase:firebase-core:17.2.3'
    implementation 'com.google.firebase:firebase-analytics:17.2.3'
    implementation 'com.google.firebase:firebase-messaging:20.1.2'
    implementation 'com.google.firebase:firebase-config:19.1.2'


    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'


    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.70"
}