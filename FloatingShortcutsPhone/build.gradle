apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.2'

    defaultConfig {
        applicationId "net.geekstools.floatshort.PRO"

        minSdkVersion 23
        targetSdkVersion 29

        versionCode 676
        versionName "${majorVersion} | " + getDateMonth() + "." + getDateDay() + "." + getDateYear() + "{${versionCode}}" + "-"

        wearAppUnbundled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
        debug {
            debuggable true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    flavorDimensions "FloatingShortcutsPro"
    productFlavors {
        releaseConfig {
            dimension "FloatingShortcutsPro"

            versionNameSuffix 'PRO[Android][Phone]'
        }
        betaConfig {
            dimension "FloatingShortcutsPro"

            versionNameSuffix 'PRO[BETA][Android][Phone]'
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE-FIREBASE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/DEPENDENCIES'
    }
}

static def getDateYear() {
    def date = new Date()
    def formattedDate = date.format('yyyy')//yyyyMMdd
    return formattedDate
}

static def getDateMonth() {
    def date = new Date()
    def formattedDate = date.format('MM')//yyyyMMdd
    return formattedDate
}

static def getDateDay() {
    def date = new Date()
    def formattedDate = date.format('dd')//yyyyMMdd
    return formattedDate
}

dependencies {
    implementation project(path: ':LoadingSpin')

    implementation project(path: ':LicenseLibrary', configuration: 'default')
    implementation project(path: ':ShapesCustomImageViewLibrary', configuration: 'default')

    implementation 'com.android.billingclient:billing:1.2.2'

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.preference:preference:1.1.0'
    implementation 'androidx.preference:preference-ktx:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.palette:palette:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0-beta05'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.dynamicanimation:dynamicanimation:1.0.0'

    implementation 'com.google.android.play:core:1.6.3'
    implementation 'com.google.android.gms:play-services-auth:17.0.0'
    implementation 'com.google.android.material:material:1.1.0-beta01'

    implementation 'com.google.firebase:firebase-core:17.2.0'
    implementation 'com.google.firebase:firebase-appindexing:19.0.0'
    implementation 'com.google.firebase:firebase-messaging:20.0.0'
    implementation 'com.google.firebase:firebase-config:19.0.2'
    implementation 'com.google.firebase:firebase-auth:19.1.0'
    implementation 'com.google.firebase:firebase-dynamic-links:19.0.0'
    implementation 'com.google.firebase:firebase-storage:19.1.0'

    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'

    implementation 'androidx.room:room-runtime:2.2.0'
    annotationProcessor 'androidx.room:room-compiler:2.2.0'
    kapt 'androidx.room:room-compiler:2.2.0'

    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.50'

    /*3rd Party Library*/
    implementation 'com.github.bumptech.glide:glide:4.9.0'
}
apply plugin: 'com.google.gms.google-services'